# dvc.yaml
stages:
  preprocess:
    cmd: python preprocess.py
    deps:
      - data/raw/household_power_consumption_hourly.csv
      - preprocess.py
    outs:
      - data/processed/X_train.csv
      - data/processed/X_test.csv
      - data/processed/y_train.csv
      - data/processed/y_test.csv
    params:
      - preprocess.test_split_ratio
      - preprocess.random_state
      - preprocess.target_column
      - train.features

  train:
    cmd: python train.py
    deps:
      - data/processed/X_train.csv
      - data/processed/y_train.csv
      - train.py
    outs:
      - models/model.pkl
    params:
      - train.model.name
      - train.model.params.n_estimators
      - train.model.params.max_depth
      - train.model.params.random_state
      - train.model.params.min_samples_split
      - train.model.params.min_samples_leaf
      - train.model.params.max_features
      # XGBoost specific parameters, DVC will ignore if not used by model.name
      - train.model.params.learning_rate
      - train.model.params.subsample
      - train.model.params.colsample_bytree
      - train.model.params.reg_alpha
      - train.model.params.gamma
      - train.model.params.min_child_weight
      - preprocess.target_column # For consistency check in train.py

  evaluate:
    cmd: python evaluate.py
    deps:
      - models/model.pkl
      - data/processed/X_test.csv
      - data/processed/y_test.csv
      - evaluate.py
    metrics:
      - metrics/metrics.json:
          cache: false # Metrics are lightweight, no need to dvc cache them
    params:
      - preprocess.target_column # For consistency check in evaluate.py