# .github/workflows/ci-cd.yml

name: CI/CD - Build and Push Docker Image

# This workflow runs on any push to the main branch
on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub
      # This uses the secrets you configured in your GitHub repository settings
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Build and push the Docker image
      # The image will be tagged with your Docker Hub username and a timestamp
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/energy-prediction-app:latest,${{ secrets.DOCKERHUB_USERNAME }}/energy-prediction-app:${{ github.sha }}

  # (Optional) Example Deployment Job
  # This job demonstrates how you might deploy the new image to a server.
  # It requires additional secrets for server access (SSH_HOST, SSH_USERNAME, SSH_KEY).
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS Credentials
        # FIX: Add '@v4' to the end of this line
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to EC2 via SSM
        run: |
          aws ssm send-command \
            --instance-ids "${{ secrets.AWS_EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy energy app" \
            --parameters commands='[
              "set -euxo pipefail",
              "if command -v apt >/dev/null 2>&1; then sudo apt-get update -y && sudo apt-get install -y docker.io; fi",
              "if command -v yum >/dev/null 2>&1; then sudo yum update -y && sudo yum install -y docker; fi",
              "sudo systemctl enable docker || true",
              "sudo systemctl start docker || true",
              "sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/energy-prediction-app:latest",
              "sudo docker stop energy-app || true",
              "sudo docker rm energy-app || true",
              "sudo docker run -d --restart=always --name energy-app -p 80:5000 ${{ secrets.DOCKERHUB_USERNAME }}/energy-prediction-app:latest"
            ]' \
            --output json
