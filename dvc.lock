schema: '2.0'
stages:
  preprocess:
    cmd: python src/preprocess.py
    deps:
    - path: data/raw/household_power_consumption_hourly.csv
      hash: md5
      md5: 4966a039db50b9d65348281aa9284f74
      size: 4256472
    - path: src/preprocess.py
      hash: md5
      md5: c9829a453c4416c41a8b08182b651ecc
      size: 3295
    params:
      params.yaml:
        preprocess.random_state: 42
        preprocess.target_column: Global_active_power
        preprocess.test_split_ratio: 0.2
        train.features:
        - hour_of_day
        - day_of_week
        - month
        - year
        - Global_reactive_power
        - Voltage
        - Global_intensity
        - Sub_metering_1
        - Sub_metering_2
        - Sub_metering_3
        - Sub_metering_4
    outs:
    - path: data/processed/X_test.csv
      hash: md5
      md5: 31f54f03208709fc03213305add4c35b
      size: 802693
    - path: data/processed/X_train.csv
      hash: md5
      md5: bb17cc02d10b3c1f0d20ff2b072d6488
      size: 3199102
    - path: data/processed/y_test.csv
      hash: md5
      md5: 02372a9c716df4a782bbb4ece6664366
      size: 249975
    - path: data/processed/y_train.csv
      hash: md5
      md5: 430912096fed0c3ec8a877f46535b381
      size: 1006246
  split:
    cmd: python src/data_split.py
    deps:
    - path: data/processed/cleaned_data.csv
      hash: md5
      md5: a65140f8a2704a77015b0d5cc16bf05e
      size: 115279892
    - path: src/data_split.py
      hash: md5
      md5: 1f31c47747187b3b3b2afb250f6e5f5f
      size: 3067
    params:
      params.yaml:
        base:
          project_name: energy_consumption_prediction
          random_state: 42
        data:
          raw_data_dir: data/raw
          raw_data_file: household_power_consumption.txt
          processed_data_dir: data/processed
          cleaned_file: cleaned_data.csv
          train_file: train.csv
          test_file: test.csv
        data_split:
          test_split_ratio: 0.2
        featurization:
          features_to_use:
          - Global_reactive_power
          - Voltage
          - Global_intensity
          - Sub_metering_1
          - Sub_metering_2
          - Sub_metering_3
        preprocessing:
          separator: ;
          missing_value_char: '?'
          target_col: Global_active_power
          imputation_method: ffill
    outs:
    - path: data/processed/test.csv
      hash: md5
      md5: be211a85e7a466889ad83a8bc432fc12
      size: 23055908
    - path: data/processed/train.csv
      hash: md5
      md5: e30b66abcdd7571113dfeaee7cc09529
      size: 92224106
  train_model:
    cmd: python src/train.py
    deps:
    - path: data/processed/train.csv
      hash: md5
      md5: d6efe250686db1a2d1071b65fc978c0d
      size: 92243702
    - path: src/train.py
      hash: md5
      md5: c7df8b34f7170f72dde8cfff32fa5f6d
      size: 4373
    params:
      params.yaml:
        base:
          project_name: energy_consumption_prediction
          random_state: 42
        data:
          raw_data_dir: data/raw
          raw_data_file: household_power_consumption.txt
          processed_data_dir: data/processed
          cleaned_file: cleaned_data.csv
          train_file: train.csv
          test_file: test.csv
        featurization:
          features_to_use:
          - Global_reactive_power
          - Voltage
          - Global_intensity
          - Sub_metering_1
          - Sub_metering_2
          - Sub_metering_3
        model:
          model_name: XGBoostRegressor
          n_estimators: 100
          max_depth: 6
          learning_rate: 0.1
          min_child_weight: 1
          subsample: 0.8
          colsample_bytree: 0.8
        preprocessing:
          separator: ;
          missing_value_char: '?'
          target_col: Global_active_power
          imputation_method: bfill
        tuning:
          cv_folds: 5
          n_iter: 100
          param_distributions:
            model.n_estimators:
            - 100
            - 200
            - 300
            - 400
            - 500
            model.max_depth:
            - 4
            - 6
            - 8
            - 10
            - 12
            model.learning_rate:
            - 0.01
            - 0.05
            - 0.1
            - 0.2
            - 0.3
            model.min_child_weight:
            - 1
            - 5
            - 10
            model.subsample:
            - 0.6
            - 0.7
            - 0.8
            - 0.9
            - 1.0
            model.colsample_bytree:
            - 0.6
            - 0.7
            - 0.8
            - 0.9
            - 1.0
            model.reg_alpha:
            - 0
            - 0.01
            - 0.1
            - 1
            model.reg_lambda:
            - 1
            - 1.5
            - 2
            - 3
            - 4
            model.gamma:
            - 0
            - 0.1
            - 0.2
            - 0.3
            - 0.4
    outs:
    - path: models/model.joblib
      hash: md5
      md5: 20247991fc54326d9b0351f5c1f608c3
      size: 498558
  evaluate_model:
    cmd: python src/evaluate.py
    deps:
    - path: data/processed/test.csv
      hash: md5
      md5: 9e2bf364f1f516d8d4ed9fe89ca6f5a1
      size: 23060884
    - path: models/model.joblib
      hash: md5
      md5: 20247991fc54326d9b0351f5c1f608c3
      size: 498558
    - path: src/evaluate.py
      hash: md5
      md5: 928231352f9f1ff78b41e4165b989f71
      size: 3875
    params:
      params.yaml:
        base:
          project_name: energy_consumption_prediction
          random_state: 42
        data:
          raw_data_dir: data/raw
          raw_data_file: household_power_consumption.txt
          processed_data_dir: data/processed
          cleaned_file: cleaned_data.csv
          train_file: train.csv
          test_file: test.csv
        featurization:
          features_to_use:
          - Global_reactive_power
          - Voltage
          - Global_intensity
          - Sub_metering_1
          - Sub_metering_2
          - Sub_metering_3
        preprocessing:
          separator: ;
          missing_value_char: '?'
          target_col: Global_active_power
          imputation_method: bfill
    outs:
    - path: reports/metrics.json
      hash: md5
      md5: 212a0b1faa16f0b1307e43d1e5e43b1b
      size: 166
  train:
    cmd: python src/train.py
    deps:
    - path: data/processed/X_train.csv
      hash: md5
      md5: bb17cc02d10b3c1f0d20ff2b072d6488
      size: 3199102
    - path: data/processed/y_train.csv
      hash: md5
      md5: 430912096fed0c3ec8a877f46535b381
      size: 1006246
    - path: src/train.py
      hash: md5
      md5: 6c6ec71e7578db6875acc844539d3ddc
      size: 3484
    params:
      params.yaml:
        preprocess.target_column: Global_active_power
        train.model.name: RandomForestRegressor
        train.model.params.colsample_bytree: 1.0
        train.model.params.gamma: 0.0
        train.model.params.learning_rate: 0.1
        train.model.params.max_depth:
        train.model.params.max_features: 1.0
        train.model.params.min_child_weight: 1
        train.model.params.min_samples_leaf: 2
        train.model.params.min_samples_split: 5
        train.model.params.n_estimators: 150
        train.model.params.random_state: 42
        train.model.params.reg_alpha: 0.0
        train.model.params.subsample: 1.0
    outs:
    - path: models/model.pkl
      hash: md5
      md5: d0779f86f12007cafd1bb936e52ede8c
      size: 133698081
  evaluate:
    cmd: python src/evaluate.py
    deps:
    - path: data/processed/X_test.csv
      hash: md5
      md5: 31f54f03208709fc03213305add4c35b
      size: 802693
    - path: data/processed/y_test.csv
      hash: md5
      md5: 02372a9c716df4a782bbb4ece6664366
      size: 249975
    - path: models/model.pkl
      hash: md5
      md5: d0779f86f12007cafd1bb936e52ede8c
      size: 133698081
    - path: src/evaluate.py
      hash: md5
      md5: 26c5232fda648c936a9475c466f1bf36
      size: 2800
    params:
      params.yaml:
        preprocess.target_column: Global_active_power
    outs:
    - path: metrics/metrics.json
      hash: md5
      md5: b876cee2e251cab100cfa7242ed4e440
      size: 109
